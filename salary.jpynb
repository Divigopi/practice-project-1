{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "efa7d247",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rank</th>\n",
       "      <th>discipline</th>\n",
       "      <th>yrs.since.phd</th>\n",
       "      <th>yrs.service</th>\n",
       "      <th>sex</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Prof</td>\n",
       "      <td>B</td>\n",
       "      <td>19</td>\n",
       "      <td>18</td>\n",
       "      <td>Male</td>\n",
       "      <td>139750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Prof</td>\n",
       "      <td>B</td>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>Male</td>\n",
       "      <td>173200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AsstProf</td>\n",
       "      <td>B</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>Male</td>\n",
       "      <td>79750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Prof</td>\n",
       "      <td>B</td>\n",
       "      <td>45</td>\n",
       "      <td>39</td>\n",
       "      <td>Male</td>\n",
       "      <td>115000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Prof</td>\n",
       "      <td>B</td>\n",
       "      <td>40</td>\n",
       "      <td>41</td>\n",
       "      <td>Male</td>\n",
       "      <td>141500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>392</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>33</td>\n",
       "      <td>30</td>\n",
       "      <td>Male</td>\n",
       "      <td>103106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>393</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>31</td>\n",
       "      <td>19</td>\n",
       "      <td>Male</td>\n",
       "      <td>150564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>394</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>42</td>\n",
       "      <td>25</td>\n",
       "      <td>Male</td>\n",
       "      <td>101738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>25</td>\n",
       "      <td>15</td>\n",
       "      <td>Male</td>\n",
       "      <td>95329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>AsstProf</td>\n",
       "      <td>A</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>81035</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>397 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         rank discipline  yrs.since.phd  yrs.service   sex  salary\n",
       "0        Prof          B             19           18  Male  139750\n",
       "1        Prof          B             20           16  Male  173200\n",
       "2    AsstProf          B              4            3  Male   79750\n",
       "3        Prof          B             45           39  Male  115000\n",
       "4        Prof          B             40           41  Male  141500\n",
       "..        ...        ...            ...          ...   ...     ...\n",
       "392      Prof          A             33           30  Male  103106\n",
       "393      Prof          A             31           19  Male  150564\n",
       "394      Prof          A             42           25  Male  101738\n",
       "395      Prof          A             25           15  Male   95329\n",
       "396  AsstProf          A              8            4  Male   81035\n",
       "\n",
       "[397 rows x 6 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "df=pd.read_csv('https://raw.githubusercontent.com/dsrscientist/dataset3/main/Salaries.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "18d7b555",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>yrs.since.phd</th>\n",
       "      <th>yrs.service</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>397.000000</td>\n",
       "      <td>397.000000</td>\n",
       "      <td>397.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>22.314861</td>\n",
       "      <td>17.614610</td>\n",
       "      <td>113706.458438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>12.887003</td>\n",
       "      <td>13.006024</td>\n",
       "      <td>30289.038695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>57800.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>12.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>91000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>21.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>107300.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>32.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>134185.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>56.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>231545.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       yrs.since.phd  yrs.service         salary\n",
       "count     397.000000   397.000000     397.000000\n",
       "mean       22.314861    17.614610  113706.458438\n",
       "std        12.887003    13.006024   30289.038695\n",
       "min         1.000000     0.000000   57800.000000\n",
       "25%        12.000000     7.000000   91000.000000\n",
       "50%        21.000000    16.000000  107300.000000\n",
       "75%        32.000000    27.000000  134185.000000\n",
       "max        56.000000    60.000000  231545.000000"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "896f7e5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f61fb015",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.indexes.base.Index"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "497175b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['rank', 'discipline', 'yrs.since.phd', 'yrs.service', 'sex', 'salary'], dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5319bf91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2b16af75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "rank             object\n",
       "discipline       object\n",
       "yrs.since.phd     int64\n",
       "yrs.service       int64\n",
       "sex              object\n",
       "salary            int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6170f731",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rank</th>\n",
       "      <th>discipline</th>\n",
       "      <th>yrs.since.phd</th>\n",
       "      <th>yrs.service</th>\n",
       "      <th>sex</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>387</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>29</td>\n",
       "      <td>15</td>\n",
       "      <td>Male</td>\n",
       "      <td>109305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>388</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>38</td>\n",
       "      <td>36</td>\n",
       "      <td>Male</td>\n",
       "      <td>119450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>389</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>33</td>\n",
       "      <td>18</td>\n",
       "      <td>Male</td>\n",
       "      <td>186023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>390</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>40</td>\n",
       "      <td>19</td>\n",
       "      <td>Male</td>\n",
       "      <td>166605</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>391</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>30</td>\n",
       "      <td>19</td>\n",
       "      <td>Male</td>\n",
       "      <td>151292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>392</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>33</td>\n",
       "      <td>30</td>\n",
       "      <td>Male</td>\n",
       "      <td>103106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>393</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>31</td>\n",
       "      <td>19</td>\n",
       "      <td>Male</td>\n",
       "      <td>150564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>394</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>42</td>\n",
       "      <td>25</td>\n",
       "      <td>Male</td>\n",
       "      <td>101738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>25</td>\n",
       "      <td>15</td>\n",
       "      <td>Male</td>\n",
       "      <td>95329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>AsstProf</td>\n",
       "      <td>A</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>81035</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         rank discipline  yrs.since.phd  yrs.service   sex  salary\n",
       "387      Prof          A             29           15  Male  109305\n",
       "388      Prof          A             38           36  Male  119450\n",
       "389      Prof          A             33           18  Male  186023\n",
       "390      Prof          A             40           19  Male  166605\n",
       "391      Prof          A             30           19  Male  151292\n",
       "392      Prof          A             33           30  Male  103106\n",
       "393      Prof          A             31           19  Male  150564\n",
       "394      Prof          A             42           25  Male  101738\n",
       "395      Prof          A             25           15  Male   95329\n",
       "396  AsstProf          A              8            4  Male   81035"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d158f2f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(397, 6)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f241ff24",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a4f5df9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# visualization\n",
    "\n",
    "df_visualizaton_nominal=df[['rank', 'discipline', 'yrs.since.phd', 'yrs.service', 'sex', 'salary']].copy()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "489999f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['rank', 'discipline', 'yrs.since.phd', 'yrs.service', 'sex', 'salary'], dtype='object')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_visualizaton_nominal.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "cd1c4c65",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "B    216\n",
      "A    181\n",
      "Name: discipline, dtype: int64\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "ax=sns.countplot(x='discipline',data=df_visualizaton_nominal)\n",
    "print(df_visualizaton_nominal['discipline'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "c7ec39cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.figure(figsize=(12,7))\n",
    "sns.heatmap(df_visualizaton_nominal.describe(),annot=True,linecolor='black',fmt='0.2f')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "003462b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Correlation "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "bf8127e3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "d8428008",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_visualizaton_nominal=df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "5ca0673c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,8),facecolor='white')\n",
    "sns.heatmap(df.corr(),annot=True)\n",
    "plt.title('Correlation')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "7484e833",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.figure(figsize=(12,7))\n",
    "sns.heatmap(df.describe(),annot=True,linecolor='black',fmt='0.2f')\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "994b2055",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='discipline', ylabel='yrs.service'>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "sns.scatterplot(x='discipline',y='yrs.service',data=df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ca0d5734",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "99a9778f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>yrs.since.phd</th>\n",
       "      <th>yrs.service</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>yrs.since.phd</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.909649</td>\n",
       "      <td>0.419231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yrs.service</th>\n",
       "      <td>0.909649</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.334745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>salary</th>\n",
       "      <td>0.419231</td>\n",
       "      <td>0.334745</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               yrs.since.phd  yrs.service    salary\n",
       "yrs.since.phd       1.000000     0.909649  0.419231\n",
       "yrs.service         0.909649     1.000000  0.334745\n",
       "salary              0.419231     0.334745  1.000000"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "1d480514",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>yrs.since.phd</th>\n",
       "      <th>yrs.service</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>397.000000</td>\n",
       "      <td>397.000000</td>\n",
       "      <td>397.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>22.314861</td>\n",
       "      <td>17.614610</td>\n",
       "      <td>113706.458438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>12.887003</td>\n",
       "      <td>13.006024</td>\n",
       "      <td>30289.038695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>57800.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>12.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>91000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>21.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>107300.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>32.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>134185.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>56.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>231545.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       yrs.since.phd  yrs.service         salary\n",
       "count     397.000000   397.000000     397.000000\n",
       "mean       22.314861    17.614610  113706.458438\n",
       "std        12.887003    13.006024   30289.038695\n",
       "min         1.000000     0.000000   57800.000000\n",
       "25%        12.000000     7.000000   91000.000000\n",
       "50%        21.000000    16.000000  107300.000000\n",
       "75%        32.000000    27.000000  134185.000000\n",
       "max        56.000000    60.000000  231545.000000"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "4a678843",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x864 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "plt.figure(figsize=(15,12))\n",
    "sns.heatmap(round(df.describe()[1:].transpose()),linewidth=2,annot=True)\n",
    "plt.xticks(fontsize=18)\n",
    "plt.yticks(fontsize=12)\n",
    "plt.title('summary')\n",
    "plt.savefig('heatmap.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "ad3fe287",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>yrs.since.phd</th>\n",
       "      <td>22.314861</td>\n",
       "      <td>12.887003</td>\n",
       "      <td>1.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>56.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yrs.service</th>\n",
       "      <td>17.614610</td>\n",
       "      <td>13.006024</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>60.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>salary</th>\n",
       "      <td>113706.458438</td>\n",
       "      <td>30289.038695</td>\n",
       "      <td>57800.0</td>\n",
       "      <td>91000.0</td>\n",
       "      <td>107300.0</td>\n",
       "      <td>134185.0</td>\n",
       "      <td>231545.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        mean           std      min      25%       50%  \\\n",
       "yrs.since.phd      22.314861     12.887003      1.0     12.0      21.0   \n",
       "yrs.service        17.614610     13.006024      0.0      7.0      16.0   \n",
       "salary         113706.458438  30289.038695  57800.0  91000.0  107300.0   \n",
       "\n",
       "                    75%       max  \n",
       "yrs.since.phd      32.0      56.0  \n",
       "yrs.service        27.0      60.0  \n",
       "salary         134185.0  231545.0  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()[1:].transpose()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "6135cf75",
   "metadata": {},
   "outputs": [],
   "source": [
    "# outlier\n",
    "\n",
    "collist=df.columns.values\n",
    "ncol=20\n",
    "nrows=15\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "ac998f40",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['rank', 'discipline', 'yrs.since.phd', 'yrs.service', 'sex',\n",
       "       'salary'], dtype=object)"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "collist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "e9925518",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(list(range(0,len(collist))))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "c15229ae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "rank\n"
     ]
    }
   ],
   "source": [
    "for i in range(0,len(collist)):\n",
    "    print(collist[i])\n",
    "    break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "614b7ebb",
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "b7889112",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "yrs.since.phd    0.300880\n",
       "yrs.service      0.650569\n",
       "salary           0.714568\n",
       "dtype: float64"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.skew()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "a4395217",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(df.isnull())\n",
    "plt.title('Null Value')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "52a8457d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(columns=['yrs.since.phd'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "73e49b8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rank</th>\n",
       "      <th>discipline</th>\n",
       "      <th>yrs.service</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Prof</td>\n",
       "      <td>B</td>\n",
       "      <td>18.0</td>\n",
       "      <td>139750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Prof</td>\n",
       "      <td>B</td>\n",
       "      <td>16.0</td>\n",
       "      <td>173200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AsstProf</td>\n",
       "      <td>B</td>\n",
       "      <td>3.0</td>\n",
       "      <td>79750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Prof</td>\n",
       "      <td>B</td>\n",
       "      <td>39.0</td>\n",
       "      <td>115000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Prof</td>\n",
       "      <td>B</td>\n",
       "      <td>41.0</td>\n",
       "      <td>141500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>392</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>30.0</td>\n",
       "      <td>103106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>393</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>19.0</td>\n",
       "      <td>150564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>394</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>25.0</td>\n",
       "      <td>101738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395</th>\n",
       "      <td>Prof</td>\n",
       "      <td>A</td>\n",
       "      <td>15.0</td>\n",
       "      <td>95329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>AsstProf</td>\n",
       "      <td>A</td>\n",
       "      <td>4.0</td>\n",
       "      <td>81035</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>397 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         rank discipline  yrs.service  salary\n",
       "0        Prof          B         18.0  139750\n",
       "1        Prof          B         16.0  173200\n",
       "2    AsstProf          B          3.0   79750\n",
       "3        Prof          B         39.0  115000\n",
       "4        Prof          B         41.0  141500\n",
       "..        ...        ...          ...     ...\n",
       "392      Prof          A         30.0  103106\n",
       "393      Prof          A         19.0  150564\n",
       "394      Prof          A         25.0  101738\n",
       "395      Prof          A         15.0   95329\n",
       "396  AsstProf          A          4.0   81035\n",
       "\n",
       "[397 rows x 4 columns]"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "717c00c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(columns=['yrs.since.phd'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "53710ea4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>yrs.service</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>yrs.service</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.305652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>salary</th>\n",
       "      <td>0.305652</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             yrs.service    salary\n",
       "yrs.service     1.000000  0.305652\n",
       "salary          0.305652  1.000000"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "601777ad",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "2eb507bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>yrs.service</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18.0</td>\n",
       "      <td>139750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16.0</td>\n",
       "      <td>173200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.0</td>\n",
       "      <td>79750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>39.0</td>\n",
       "      <td>115000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>41.0</td>\n",
       "      <td>141500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>392</th>\n",
       "      <td>30.0</td>\n",
       "      <td>103106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>393</th>\n",
       "      <td>19.0</td>\n",
       "      <td>150564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>394</th>\n",
       "      <td>25.0</td>\n",
       "      <td>101738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395</th>\n",
       "      <td>15.0</td>\n",
       "      <td>95329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>4.0</td>\n",
       "      <td>81035</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>397 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     yrs.service  salary\n",
       "0           18.0  139750\n",
       "1           16.0  173200\n",
       "2            3.0   79750\n",
       "3           39.0  115000\n",
       "4           41.0  141500\n",
       "..           ...     ...\n",
       "392         30.0  103106\n",
       "393         19.0  150564\n",
       "394         25.0  101738\n",
       "395         15.0   95329\n",
       "396          4.0   81035\n",
       "\n",
       "[397 rows x 2 columns]"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "ae1c3f90",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,5),facecolor='white')\n",
    "plot = 1\n",
    "for column in df:\n",
    "    if plot<=2:\n",
    "        plt.subplot(1,2,plot)\n",
    "        sns.distplot(df[column])\n",
    "        plt.title(\"Data Distribution\")\n",
    "        plt.xlabel(column)\n",
    "    plot+=1\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "ffed17cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x720 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,10),facecolor='white')\n",
    "plot = 1\n",
    "for column in df:\n",
    "    if plot<=9:\n",
    "        plt.subplot(3,3,plot)\n",
    "        sns.boxplot(df[column])\n",
    "        plt.xlabel(column)\n",
    "        plt.title(\"Box Plot\")\n",
    "    plot+=1\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "d8cc30e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.00811957],\n",
       "       [-0.1662852 ],\n",
       "       [-1.19436175],\n",
       "       [ 1.65261947],\n",
       "       [ 1.81078509],\n",
       "       [-0.95711331],\n",
       "       [ 0.38729448],\n",
       "       [ 2.12711634],\n",
       "       [ 0.15004605],\n",
       "       [-0.00811957],\n",
       "       [-0.79894769],\n",
       "       [-1.27344456],\n",
       "       [-1.35252737],\n",
       "       [-0.03859733],\n",
       "       [-0.00811957],\n",
       "       [-1.19436175],\n",
       "       [ 0.15004605],\n",
       "       [ 1.25720541],\n",
       "       [ 0.38729448],\n",
       "       [ 1.41537103],\n",
       "       [ 0.62454292],\n",
       "       [ 1.01995697],\n",
       "       [ 0.94087416],\n",
       "       [ 0.07096324],\n",
       "       [-0.79894769],\n",
       "       [-0.79894769],\n",
       "       [ 0.38729448],\n",
       "       [-1.19436175],\n",
       "       [-0.03859733],\n",
       "       [-0.79894769],\n",
       "       [-1.11527894],\n",
       "       [-1.27344456],\n",
       "       [-0.71986488],\n",
       "       [-1.27344456],\n",
       "       [-1.27344456],\n",
       "       [-0.03859733],\n",
       "       [ 0.22912886],\n",
       "       [-1.11527894],\n",
       "       [ 1.01995697],\n",
       "       [-0.71986488],\n",
       "       [-1.27344456],\n",
       "       [ 0.38729448],\n",
       "       [ 0.70362573],\n",
       "       [ 1.57353665],\n",
       "       [ 0.07096324],\n",
       "       [-0.24536801],\n",
       "       [ 0.78270854],\n",
       "       [ 0.07096324],\n",
       "       [ 0.54546011],\n",
       "       [-1.35252737],\n",
       "       [ 0.78270854],\n",
       "       [-0.56169926],\n",
       "       [-1.19436175],\n",
       "       [-0.71986488],\n",
       "       [-0.56169926],\n",
       "       [-1.03619612],\n",
       "       [ 0.22912886],\n",
       "       [-0.79894769],\n",
       "       [-0.71986488],\n",
       "       [-1.19436175],\n",
       "       [-0.79894769],\n",
       "       [-1.27344456],\n",
       "       [ 1.01995697],\n",
       "       [-0.56169926],\n",
       "       [-1.19436175],\n",
       "       [-0.79894769],\n",
       "       [-0.48261644],\n",
       "       [ 1.01995697],\n",
       "       [-0.08720239],\n",
       "       [ 1.41537103],\n",
       "       [-1.27344456],\n",
       "       [ 2.12711634],\n",
       "       [ 0.07096324],\n",
       "       [ 1.25720541],\n",
       "       [ 0.38729448],\n",
       "       [-1.19436175],\n",
       "       [-1.19436175],\n",
       "       [ 0.07096324],\n",
       "       [-1.35252737],\n",
       "       [-1.27344456],\n",
       "       [ 0.78270854],\n",
       "       [-0.1662852 ],\n",
       "       [ 0.15004605],\n",
       "       [-1.27344456],\n",
       "       [-0.00811957],\n",
       "       [-0.32445082],\n",
       "       [ 1.49445384],\n",
       "       [-1.27344456],\n",
       "       [ 0.54546011],\n",
       "       [-0.8780305 ],\n",
       "       [-1.03619612],\n",
       "       [-0.8780305 ],\n",
       "       [-0.8780305 ],\n",
       "       [ 1.57353665],\n",
       "       [ 0.15004605],\n",
       "       [-0.03859733],\n",
       "       [-0.48261644],\n",
       "       [-0.8780305 ],\n",
       "       [-0.32445082],\n",
       "       [ 0.62454292],\n",
       "       [ 0.54546011],\n",
       "       [ 0.38729448],\n",
       "       [-1.03619612],\n",
       "       [-0.32445082],\n",
       "       [-0.64078207],\n",
       "       [ 0.78270854],\n",
       "       [-0.79894769],\n",
       "       [-0.79894769],\n",
       "       [-0.79894769],\n",
       "       [ 1.01995697],\n",
       "       [-0.1662852 ],\n",
       "       [-0.1662852 ],\n",
       "       [-1.35252737],\n",
       "       [ 1.49445384],\n",
       "       [-0.03859733],\n",
       "       [-0.71986488],\n",
       "       [ 0.86179135],\n",
       "       [ 1.41537103],\n",
       "       [-1.35252737],\n",
       "       [-1.19436175],\n",
       "       [-0.32445082],\n",
       "       [ 1.09903979],\n",
       "       [ 0.30821167],\n",
       "       [ 0.30821167],\n",
       "       [ 0.30821167],\n",
       "       [ 2.44344758],\n",
       "       [ 0.62454292],\n",
       "       [-0.03859733],\n",
       "       [ 0.94087416],\n",
       "       [-1.27344456],\n",
       "       [-0.71986488],\n",
       "       [ 3.07611007],\n",
       "       [-0.79894769],\n",
       "       [-1.35252737],\n",
       "       [ 0.54546011],\n",
       "       [-0.00811957],\n",
       "       [-0.32445082],\n",
       "       [-0.32445082],\n",
       "       [-0.8780305 ],\n",
       "       [-0.00811957],\n",
       "       [-0.79894769],\n",
       "       [-0.64078207],\n",
       "       [-0.56169926],\n",
       "       [-1.19436175],\n",
       "       [ 0.70362573],\n",
       "       [ 0.78270854],\n",
       "       [-1.11527894],\n",
       "       [ 0.70362573],\n",
       "       [ 0.62454292],\n",
       "       [-1.19436175],\n",
       "       [-0.48261644],\n",
       "       [-1.11527894],\n",
       "       [-0.71986488],\n",
       "       [-0.64078207],\n",
       "       [-0.03859733],\n",
       "       [ 0.22912886],\n",
       "       [-0.00811957],\n",
       "       [-0.03859733],\n",
       "       [-0.95711331],\n",
       "       [-0.1662852 ],\n",
       "       [-1.27344456],\n",
       "       [ 0.07096324],\n",
       "       [-0.8780305 ],\n",
       "       [-1.19436175],\n",
       "       [-0.03859733],\n",
       "       [-0.79894769],\n",
       "       [-0.1662852 ],\n",
       "       [ 0.07096324],\n",
       "       [-0.95711331],\n",
       "       [-0.00811957],\n",
       "       [-1.03619612],\n",
       "       [ 0.07096324],\n",
       "       [ 0.46637729],\n",
       "       [ 0.15004605],\n",
       "       [-0.95711331],\n",
       "       [ 0.54546011],\n",
       "       [-0.8780305 ],\n",
       "       [-0.71986488],\n",
       "       [-0.32445082],\n",
       "       [-1.19436175],\n",
       "       [-0.56169926],\n",
       "       [-1.03619612],\n",
       "       [-0.79894769],\n",
       "       [ 0.30821167],\n",
       "       [ 0.38729448],\n",
       "       [ 0.94087416],\n",
       "       [-0.64078207],\n",
       "       [-0.64078207],\n",
       "       [ 0.78270854],\n",
       "       [ 0.07096324],\n",
       "       [-0.71986488],\n",
       "       [ 0.30821167],\n",
       "       [-0.00811957],\n",
       "       [ 0.07096324],\n",
       "       [ 2.75977883],\n",
       "       [-0.8780305 ],\n",
       "       [-1.11527894],\n",
       "       [-1.11527894],\n",
       "       [ 1.1781226 ],\n",
       "       [ 0.30821167],\n",
       "       [-1.11527894],\n",
       "       [ 1.73170228],\n",
       "       [-0.08720239],\n",
       "       [-0.08720239],\n",
       "       [-1.03619612],\n",
       "       [-1.27344456],\n",
       "       [ 1.1781226 ],\n",
       "       [-0.00811957],\n",
       "       [-1.27344456],\n",
       "       [ 0.15004605],\n",
       "       [-1.19436175],\n",
       "       [ 1.65261947],\n",
       "       [-0.8780305 ],\n",
       "       [ 0.07096324],\n",
       "       [-1.35252737],\n",
       "       [-0.56169926],\n",
       "       [-0.56169926],\n",
       "       [ 0.30821167],\n",
       "       [-0.8780305 ],\n",
       "       [-0.56169926],\n",
       "       [ 0.22912886],\n",
       "       [-0.64078207],\n",
       "       [-0.95711331],\n",
       "       [ 0.15004605],\n",
       "       [ 1.33628822],\n",
       "       [ 0.15004605],\n",
       "       [-1.35252737],\n",
       "       [-0.8780305 ],\n",
       "       [-0.56169926],\n",
       "       [ 1.57353665],\n",
       "       [ 0.70362573],\n",
       "       [ 0.46637729],\n",
       "       [ 0.07096324],\n",
       "       [ 0.07096324],\n",
       "       [-1.19436175],\n",
       "       [-0.08720239],\n",
       "       [ 0.54546011],\n",
       "       [-0.95711331],\n",
       "       [ 1.73170228],\n",
       "       [-0.95711331],\n",
       "       [-1.19436175],\n",
       "       [ 0.94087416],\n",
       "       [ 1.49445384],\n",
       "       [ 0.38729448],\n",
       "       [ 0.38729448],\n",
       "       [-0.56169926],\n",
       "       [ 0.38729448],\n",
       "       [-0.00811957],\n",
       "       [ 0.38729448],\n",
       "       [-0.8780305 ],\n",
       "       [ 1.65261947],\n",
       "       [-0.79894769],\n",
       "       [-0.48261644],\n",
       "       [-1.27344456],\n",
       "       [-0.8780305 ],\n",
       "       [-0.79894769],\n",
       "       [ 0.30821167],\n",
       "       [ 0.38729448],\n",
       "       [-1.19436175],\n",
       "       [ 0.94087416],\n",
       "       [ 1.1781226 ],\n",
       "       [ 2.12711634],\n",
       "       [ 0.62454292],\n",
       "       [ 1.01995697],\n",
       "       [ 1.33628822],\n",
       "       [ 0.94087416],\n",
       "       [ 1.96895071],\n",
       "       [-0.64078207],\n",
       "       [ 2.04803352],\n",
       "       [-0.8780305 ],\n",
       "       [ 1.73170228],\n",
       "       [-0.00811957],\n",
       "       [-1.35252737],\n",
       "       [-1.11527894],\n",
       "       [-1.19436175],\n",
       "       [-0.95711331],\n",
       "       [ 2.36436477],\n",
       "       [ 0.70362573],\n",
       "       [-0.00811957],\n",
       "       [ 2.20619915],\n",
       "       [ 1.57353665],\n",
       "       [ 0.70362573],\n",
       "       [ 2.6016132 ],\n",
       "       [ 1.96895071],\n",
       "       [-0.95711331],\n",
       "       [ 2.44344758],\n",
       "       [ 0.70362573],\n",
       "       [-0.03859733],\n",
       "       [ 0.70362573],\n",
       "       [-1.03619612],\n",
       "       [-0.8780305 ],\n",
       "       [ 0.78270854],\n",
       "       [-0.71986488],\n",
       "       [-1.35252737],\n",
       "       [-0.8780305 ],\n",
       "       [ 1.41537103],\n",
       "       [-0.00811957],\n",
       "       [-0.56169926],\n",
       "       [ 1.96895071],\n",
       "       [ 1.65261947],\n",
       "       [ 1.41537103],\n",
       "       [-0.1662852 ],\n",
       "       [-0.40353363],\n",
       "       [-1.11527894],\n",
       "       [ 2.04803352],\n",
       "       [ 1.01995697],\n",
       "       [-1.11527894],\n",
       "       [ 0.78270854],\n",
       "       [-0.03859733],\n",
       "       [-0.24536801],\n",
       "       [-0.8780305 ],\n",
       "       [-0.71986488],\n",
       "       [ 0.07096324],\n",
       "       [ 1.33628822],\n",
       "       [-0.95711331],\n",
       "       [-1.19436175],\n",
       "       [-0.71986488],\n",
       "       [ 2.12711634],\n",
       "       [-0.1662852 ],\n",
       "       [-0.24536801],\n",
       "       [ 0.38729448],\n",
       "       [-0.71986488],\n",
       "       [-0.56169926],\n",
       "       [-0.24536801],\n",
       "       [ 1.01995697],\n",
       "       [-1.11527894],\n",
       "       [-0.24536801],\n",
       "       [ 1.49445384],\n",
       "       [-0.64078207],\n",
       "       [ 0.38729448],\n",
       "       [ 3.31335851],\n",
       "       [-0.71986488],\n",
       "       [-0.64078207],\n",
       "       [ 0.07096324],\n",
       "       [-0.95711331],\n",
       "       [ 1.57353665],\n",
       "       [ 0.38729448],\n",
       "       [-0.48261644],\n",
       "       [ 0.54546011],\n",
       "       [-0.24536801],\n",
       "       [-0.56169926],\n",
       "       [-0.08720239],\n",
       "       [ 1.57353665],\n",
       "       [ 1.01995697],\n",
       "       [ 1.33628822],\n",
       "       [-0.64078207],\n",
       "       [ 0.70362573],\n",
       "       [ 1.1781226 ],\n",
       "       [-1.19436175],\n",
       "       [ 0.78270854],\n",
       "       [ 2.44344758],\n",
       "       [ 1.57353665],\n",
       "       [ 0.70362573],\n",
       "       [ 0.15004605],\n",
       "       [-1.35252737],\n",
       "       [ 0.22912886],\n",
       "       [ 1.73170228],\n",
       "       [ 1.33628822],\n",
       "       [-0.32445082],\n",
       "       [-1.11527894],\n",
       "       [-0.56169926],\n",
       "       [-0.24536801],\n",
       "       [ 0.94087416],\n",
       "       [-0.08720239],\n",
       "       [ 1.96895071],\n",
       "       [ 1.73170228],\n",
       "       [-0.64078207],\n",
       "       [-1.35252737],\n",
       "       [ 0.94087416],\n",
       "       [ 1.01995697],\n",
       "       [-0.79894769],\n",
       "       [ 0.15004605],\n",
       "       [-0.8780305 ],\n",
       "       [ 0.62454292],\n",
       "       [ 0.07096324],\n",
       "       [ 0.62454292],\n",
       "       [-1.35252737],\n",
       "       [-1.19436175],\n",
       "       [ 1.57353665],\n",
       "       [-0.79894769],\n",
       "       [-1.19436175],\n",
       "       [ 0.38729448],\n",
       "       [-1.03619612],\n",
       "       [ 2.04803352],\n",
       "       [ 0.22912886],\n",
       "       [-0.71986488],\n",
       "       [ 0.70362573],\n",
       "       [-0.24536801],\n",
       "       [ 1.41537103],\n",
       "       [-0.00811957],\n",
       "       [ 0.07096324],\n",
       "       [ 0.07096324],\n",
       "       [ 0.94087416],\n",
       "       [ 0.07096324],\n",
       "       [ 0.54546011],\n",
       "       [-0.24536801],\n",
       "       [-1.11527894]])"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = df.drop(columns=['salary'])\n",
    "y = df['salary']\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "ss = StandardScaler()\n",
    "x_new = ss.fit_transform(x)\n",
    "x_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "45711499",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(297, 1)"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "x_train,x_test,y_train,y_test = train_test_split(x_new,y,random_state=20,test_size=0.25)\n",
    "x_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "abb5723d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(297,)"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "168254ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(100, 1)"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "58f94b18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(100,)"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "1b86ddc8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "lr = LinearRegression()\n",
    "lr.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "87bee6df",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pre = lr.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "f8d4bed6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Actual</th>\n",
       "      <th>Predict</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>119800</td>\n",
       "      <td>105437.043101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>261</th>\n",
       "      <td>107550</td>\n",
       "      <td>133286.999272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>354</th>\n",
       "      <td>83600</td>\n",
       "      <td>100168.132474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>277</th>\n",
       "      <td>163200</td>\n",
       "      <td>119738.371946</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>103450</td>\n",
       "      <td>125007.282572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>148750</td>\n",
       "      <td>113716.759800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>258</th>\n",
       "      <td>73800</td>\n",
       "      <td>101673.535510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>80225</td>\n",
       "      <td>100920.833992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204</th>\n",
       "      <td>165000</td>\n",
       "      <td>103178.938546</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>109000</td>\n",
       "      <td>128770.790163</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Actual        Predict\n",
       "10   119800  105437.043101\n",
       "261  107550  133286.999272\n",
       "354   83600  100168.132474\n",
       "277  163200  119738.371946\n",
       "17   103450  125007.282572\n",
       "232  148750  113716.759800\n",
       "258   73800  101673.535510\n",
       "34    80225  100920.833992\n",
       "204  165000  103178.938546\n",
       "250  109000  128770.790163"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame({\"Actual\":y_test,\"Predict\":y_pre})\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bd0dc1f4",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
